// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: ticketing/api/location/v1/location.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	query "github.com/go-saas/kit/pkg/query"
	lbs "github.com/go-saas/lbs"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Logo          *TicketingMedia   `protobuf:"bytes,11,opt,name=logo,proto3" json:"logo,omitempty"`
	Medias        []*TicketingMedia `protobuf:"bytes,12,rep,name=medias,proto3" json:"medias,omitempty"`
	Desc          string            `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	ShortDesc     string            `protobuf:"bytes,14,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Content       *structpb.Struct  `protobuf:"bytes,15,opt,name=content,proto3" json:"content,omitempty"`
	Address       *lbs.Address      `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	LegalDocs     []*TicketingMedia `protobuf:"bytes,17,rep,name=legal_docs,json=legalDocs,proto3" json:"legal_docs,omitempty"`
	PublicContact *ContactInfo      `protobuf:"bytes,18,opt,name=public_contact,json=publicContact,proto3" json:"public_contact,omitempty"`
}

func (x *CreateLocationRequest) Reset() {
	*x = CreateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationRequest) ProtoMessage() {}

func (x *CreateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationRequest.ProtoReflect.Descriptor instead.
func (*CreateLocationRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLocationRequest) GetLogo() *TicketingMedia {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *CreateLocationRequest) GetMedias() []*TicketingMedia {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *CreateLocationRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateLocationRequest) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *CreateLocationRequest) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateLocationRequest) GetAddress() *lbs.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CreateLocationRequest) GetLegalDocs() []*TicketingMedia {
	if x != nil {
		return x.LegalDocs
	}
	return nil
}

func (x *CreateLocationRequest) GetPublicContact() *ContactInfo {
	if x != nil {
		return x.PublicContact
	}
	return nil
}

type ContactInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ContactInfo) Reset() {
	*x = ContactInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfo) ProtoMessage() {}

func (x *ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfo.ProtoReflect.Descriptor instead.
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{1}
}

func (x *ContactInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ContactInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type TicketingMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	MimeType string `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TicketingMedia) Reset() {
	*x = TicketingMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketingMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketingMedia) ProtoMessage() {}

func (x *TicketingMedia) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketingMedia.ProtoReflect.Descriptor instead.
func (*TicketingMedia) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{2}
}

func (x *TicketingMedia) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketingMedia) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TicketingMedia) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *TicketingMedia) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketingMedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   *UpdateLocation        `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLocationRequest) GetLocation() *UpdateLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateLocationRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string            `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Logo          *TicketingMedia   `protobuf:"bytes,11,opt,name=logo,proto3" json:"logo,omitempty"`
	Medias        []*TicketingMedia `protobuf:"bytes,12,rep,name=medias,proto3" json:"medias,omitempty"`
	Desc          string            `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	ShortDesc     string            `protobuf:"bytes,14,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Content       *structpb.Struct  `protobuf:"bytes,15,opt,name=content,proto3" json:"content,omitempty"`
	Address       *lbs.Address      `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	LegalDocs     []*TicketingMedia `protobuf:"bytes,17,rep,name=legal_docs,json=legalDocs,proto3" json:"legal_docs,omitempty"`
	PublicContact *ContactInfo      `protobuf:"bytes,18,opt,name=public_contact,json=publicContact,proto3" json:"public_contact,omitempty"`
}

func (x *UpdateLocation) Reset() {
	*x = UpdateLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocation) ProtoMessage() {}

func (x *UpdateLocation) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocation.ProtoReflect.Descriptor instead.
func (*UpdateLocation) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLocation) GetLogo() *TicketingMedia {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *UpdateLocation) GetMedias() []*TicketingMedia {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *UpdateLocation) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateLocation) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *UpdateLocation) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UpdateLocation) GetAddress() *lbs.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateLocation) GetLegalDocs() []*TicketingMedia {
	if x != nil {
		return x.LegalDocs
	}
	return nil
}

func (x *UpdateLocation) GetPublicContact() *ContactInfo {
	if x != nil {
		return x.PublicContact
	}
	return nil
}

type DeleteLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLocationRequest) Reset() {
	*x = DeleteLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationRequest) ProtoMessage() {}

func (x *DeleteLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocationRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLocationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLocationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteLocationReply) Reset() {
	*x = DeleteLocationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationReply) ProtoMessage() {}

func (x *DeleteLocationReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationReply.ProtoReflect.Descriptor instead.
func (*DeleteLocationReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLocationReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLocationReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLocationRequest) Reset() {
	*x = GetLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationRequest) ProtoMessage() {}

func (x *GetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationRequest.ProtoReflect.Descriptor instead.
func (*GetLocationRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{7}
}

func (x *GetLocationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LocationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *query.StringFilterOperation `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name *query.StringFilterOperation `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LocationFilter) Reset() {
	*x = LocationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationFilter) ProtoMessage() {}

func (x *LocationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationFilter.ProtoReflect.Descriptor instead.
func (*LocationFilter) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{8}
}

func (x *LocationFilter) GetId() *query.StringFilterOperation {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *LocationFilter) GetName() *query.StringFilterOperation {
	if x != nil {
		return x.Name
	}
	return nil
}

type ListLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageOffset int32                  `protobuf:"varint,1,opt,name=page_offset,json=pageOffset,proto3" json:"page_offset,omitempty"`
	PageSize   int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search     string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Sort       []string               `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
	Fields     *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	Filter     *LocationFilter        `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListLocationRequest) Reset() {
	*x = ListLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationRequest) ProtoMessage() {}

func (x *ListLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationRequest.ProtoReflect.Descriptor instead.
func (*ListLocationRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{9}
}

func (x *ListLocationRequest) GetPageOffset() int32 {
	if x != nil {
		return x.PageOffset
	}
	return 0
}

func (x *ListLocationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLocationRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListLocationRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListLocationRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListLocationRequest) GetFilter() *LocationFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListLocationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSize  int32       `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FilterSize int32       `protobuf:"varint,2,opt,name=filter_size,json=filterSize,proto3" json:"filter_size,omitempty"`
	Items      []*Location `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListLocationReply) Reset() {
	*x = ListLocationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationReply) ProtoMessage() {}

func (x *ListLocationReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationReply.ProtoReflect.Descriptor instead.
func (*ListLocationReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{10}
}

func (x *ListLocationReply) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListLocationReply) GetFilterSize() int32 {
	if x != nil {
		return x.FilterSize
	}
	return 0
}

func (x *ListLocationReply) GetItems() []*Location {
	if x != nil {
		return x.Items
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string            `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Logo          *TicketingMedia   `protobuf:"bytes,11,opt,name=logo,proto3" json:"logo,omitempty"`
	Medias        []*TicketingMedia `protobuf:"bytes,12,rep,name=medias,proto3" json:"medias,omitempty"`
	Desc          string            `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	ShortDesc     string            `protobuf:"bytes,14,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Content       *structpb.Struct  `protobuf:"bytes,15,opt,name=content,proto3" json:"content,omitempty"`
	Address       *lbs.Address      `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	LegalDocs     []*TicketingMedia `protobuf:"bytes,17,rep,name=legal_docs,json=legalDocs,proto3" json:"legal_docs,omitempty"`
	PublicContact *ContactInfo      `protobuf:"bytes,18,opt,name=public_contact,json=publicContact,proto3" json:"public_contact,omitempty"`
	Rating        int32             `protobuf:"varint,19,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{11}
}

func (x *Location) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetLogo() *TicketingMedia {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *Location) GetMedias() []*TicketingMedia {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *Location) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Location) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *Location) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Location) GetAddress() *lbs.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Location) GetLegalDocs() []*TicketingMedia {
	if x != nil {
		return x.LegalDocs
	}
	return nil
}

func (x *Location) GetPublicContact() *ContactInfo {
	if x != nil {
		return x.PublicContact
	}
	return nil
}

func (x *Location) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type LocationHall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags       string       `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Capacity   int32        `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	SeatGroups []*SeatGroup `protobuf:"bytes,6,rep,name=seat_groups,json=seatGroups,proto3" json:"seat_groups,omitempty"`
}

func (x *LocationHall) Reset() {
	*x = LocationHall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationHall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationHall) ProtoMessage() {}

func (x *LocationHall) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationHall.ProtoReflect.Descriptor instead.
func (*LocationHall) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{12}
}

func (x *LocationHall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LocationHall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LocationHall) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *LocationHall) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *LocationHall) GetSeatGroups() []*SeatGroup {
	if x != nil {
		return x.SeatGroups
	}
	return nil
}

type SeatGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SeatCount int32  `protobuf:"varint,5,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
}

func (x *SeatGroup) Reset() {
	*x = SeatGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatGroup) ProtoMessage() {}

func (x *SeatGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatGroup.ProtoReflect.Descriptor instead.
func (*SeatGroup) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{13}
}

func (x *SeatGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeatGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatGroup) GetSeatCount() int32 {
	if x != nil {
		return x.SeatCount
	}
	return 0
}

type GetLocationHallsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLocationHallsRequest) Reset() {
	*x = GetLocationHallsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationHallsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationHallsRequest) ProtoMessage() {}

func (x *GetLocationHallsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationHallsRequest.ProtoReflect.Descriptor instead.
func (*GetLocationHallsRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{14}
}

func (x *GetLocationHallsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLocationHallsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Halls []*LocationHall `protobuf:"bytes,1,rep,name=halls,proto3" json:"halls,omitempty"`
}

func (x *GetLocationHallsReply) Reset() {
	*x = GetLocationHallsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationHallsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationHallsReply) ProtoMessage() {}

func (x *GetLocationHallsReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationHallsReply.ProtoReflect.Descriptor instead.
func (*GetLocationHallsReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{15}
}

func (x *GetLocationHallsReply) GetHalls() []*LocationHall {
	if x != nil {
		return x.Halls
	}
	return nil
}

type GetLocationHallDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	HallId     string `protobuf:"bytes,2,opt,name=hall_id,json=hallId,proto3" json:"hall_id,omitempty"`
}

func (x *GetLocationHallDetailRequest) Reset() {
	*x = GetLocationHallDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationHallDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationHallDetailRequest) ProtoMessage() {}

func (x *GetLocationHallDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationHallDetailRequest.ProtoReflect.Descriptor instead.
func (*GetLocationHallDetailRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{16}
}

func (x *GetLocationHallDetailRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *GetLocationHallDetailRequest) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

type GetLocationHallDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hall *LocationHall `protobuf:"bytes,1,opt,name=hall,proto3" json:"hall,omitempty"`
}

func (x *GetLocationHallDetailReply) Reset() {
	*x = GetLocationHallDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationHallDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationHallDetailReply) ProtoMessage() {}

func (x *GetLocationHallDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationHallDetailReply.ProtoReflect.Descriptor instead.
func (*GetLocationHallDetailReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{17}
}

func (x *GetLocationHallDetailReply) GetHall() *LocationHall {
	if x != nil {
		return x.Hall
	}
	return nil
}

type CreateLocationHallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hall *UpdateLocationHall `protobuf:"bytes,2,opt,name=hall,proto3" json:"hall,omitempty"`
}

func (x *CreateLocationHallRequest) Reset() {
	*x = CreateLocationHallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationHallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationHallRequest) ProtoMessage() {}

func (x *CreateLocationHallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationHallRequest.ProtoReflect.Descriptor instead.
func (*CreateLocationHallRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{18}
}

func (x *CreateLocationHallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateLocationHallRequest) GetHall() *UpdateLocationHall {
	if x != nil {
		return x.Hall
	}
	return nil
}

type UpdateLocationHall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags       string             `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Capacity   int32              `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	SeatGroups []*UpdateSeatGroup `protobuf:"bytes,6,rep,name=seat_groups,json=seatGroups,proto3" json:"seat_groups,omitempty"`
	Seats      []*Seat            `protobuf:"bytes,7,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *UpdateLocationHall) Reset() {
	*x = UpdateLocationHall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationHall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationHall) ProtoMessage() {}

func (x *UpdateLocationHall) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationHall.ProtoReflect.Descriptor instead.
func (*UpdateLocationHall) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateLocationHall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLocationHall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLocationHall) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *UpdateLocationHall) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *UpdateLocationHall) GetSeatGroups() []*UpdateSeatGroup {
	if x != nil {
		return x.SeatGroups
	}
	return nil
}

func (x *UpdateLocationHall) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

type UpdateSeatGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Seats []*Seat `protobuf:"bytes,3,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *UpdateSeatGroup) Reset() {
	*x = UpdateSeatGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeatGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatGroup) ProtoMessage() {}

func (x *UpdateSeatGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatGroup.ProtoReflect.Descriptor instead.
func (*UpdateSeatGroup) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateSeatGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSeatGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSeatGroup) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Row int32  `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Col int32  `protobuf:"varint,3,opt,name=col,proto3" json:"col,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{21}
}

func (x *Seat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Seat) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Seat) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

type CreateLocationHallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLocationHallReply) Reset() {
	*x = CreateLocationHallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationHallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationHallReply) ProtoMessage() {}

func (x *CreateLocationHallReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationHallReply.ProtoReflect.Descriptor instead.
func (*CreateLocationHallReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{22}
}

type UpdateLocationHallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hall *UpdateLocationHall `protobuf:"bytes,2,opt,name=hall,proto3" json:"hall,omitempty"`
}

func (x *UpdateLocationHallRequest) Reset() {
	*x = UpdateLocationHallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationHallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationHallRequest) ProtoMessage() {}

func (x *UpdateLocationHallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationHallRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationHallRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateLocationHallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLocationHallRequest) GetHall() *UpdateLocationHall {
	if x != nil {
		return x.Hall
	}
	return nil
}

type UpdateLocationHallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLocationHallReply) Reset() {
	*x = UpdateLocationHallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationHallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationHallReply) ProtoMessage() {}

func (x *UpdateLocationHallReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationHallReply.ProtoReflect.Descriptor instead.
func (*UpdateLocationHallReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{24}
}

type DeleteLocationHallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HallId string `protobuf:"bytes,2,opt,name=hall_id,json=hallId,proto3" json:"hall_id,omitempty"`
}

func (x *DeleteLocationHallRequest) Reset() {
	*x = DeleteLocationHallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationHallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationHallRequest) ProtoMessage() {}

func (x *DeleteLocationHallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationHallRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocationHallRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteLocationHallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLocationHallRequest) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

type DeleteLocationHallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HallId string `protobuf:"bytes,2,opt,name=hall_id,json=hallId,proto3" json:"hall_id,omitempty"`
}

func (x *DeleteLocationHallReply) Reset() {
	*x = DeleteLocationHallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_location_v1_location_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationHallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationHallReply) ProtoMessage() {}

func (x *DeleteLocationHallReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_location_v1_location_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationHallReply.ProtoReflect.Descriptor instead.
func (*DeleteLocationHallReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_location_v1_location_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteLocationHallReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLocationHallReply) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

var File_ticketing_api_location_v1_location_proto protoreflect.FileDescriptor

var file_ticketing_api_location_v1_location_proto_rawDesc = []byte{
	0x0a, 0x28, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6c, 0x62, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x62,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x73,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x0e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x39, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x77, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0xa8, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xf5, 0x03, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x31,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x62, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44,
	0x6f, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xf6, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xfb, 0x03, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x62, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x64, 0x6f, 0x63, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x73,
	0x12, 0x4d, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x4e, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x68, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x68, 0x61, 0x6c,
	0x6c, 0x73, 0x22, 0x70, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x07, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x68, 0x61, 0x6c, 0x6c, 0x22,
	0x7a, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x68, 0x61, 0x6c, 0x6c, 0x22, 0xec, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x63, 0x6f, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x7a, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x68, 0x61, 0x6c, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x07, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x68,
	0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x32, 0x9c, 0x0e, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x5a, 0x20, 0x3a, 0x01, 0x2a,
	0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc3, 0x01, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54, 0x3a, 0x01, 0x2a,
	0x5a, 0x29, 0x3a, 0x01, 0x2a, 0x32, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x69, 0x64, 0x7d, 0x1a, 0x24, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x69, 0x64,
	0x7d, 0x12, 0x97, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x32, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x5a, 0x2a,
	0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x68, 0x61, 0x6c, 0x6c, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x61, 0x6c, 0x6c, 0x12, 0xc4, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x61, 0x6c, 0x6c, 0x2f, 0x7b, 0x68, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22,
	0x20, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x61, 0x6c,
	0x6c, 0x12, 0xe6, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x60, 0x3a, 0x01, 0x2a, 0x5a, 0x2f, 0x3a,
	0x01, 0x2a, 0x32, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x68, 0x61, 0x6c, 0x6c, 0x2f, 0x7b, 0x68, 0x61, 0x6c, 0x6c, 0x2e, 0x69, 0x64, 0x7d, 0x1a, 0x2a,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x61, 0x6c, 0x6c,
	0x2f, 0x7b, 0x68, 0x61, 0x6c, 0x6c, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0xb2, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c,
	0x6c, 0x12, 0x34, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x68, 0x61, 0x6c, 0x6c, 0x2f, 0x7b, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x42,
	0xa6, 0x01, 0x92, 0x41, 0x69, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61,
	0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticketing_api_location_v1_location_proto_rawDescOnce sync.Once
	file_ticketing_api_location_v1_location_proto_rawDescData = file_ticketing_api_location_v1_location_proto_rawDesc
)

func file_ticketing_api_location_v1_location_proto_rawDescGZIP() []byte {
	file_ticketing_api_location_v1_location_proto_rawDescOnce.Do(func() {
		file_ticketing_api_location_v1_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketing_api_location_v1_location_proto_rawDescData)
	})
	return file_ticketing_api_location_v1_location_proto_rawDescData
}

var file_ticketing_api_location_v1_location_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_ticketing_api_location_v1_location_proto_goTypes = []interface{}{
	(*CreateLocationRequest)(nil),        // 0: ticketing.api.location.v1.CreateLocationRequest
	(*ContactInfo)(nil),                  // 1: ticketing.api.location.v1.ContactInfo
	(*TicketingMedia)(nil),               // 2: ticketing.api.location.v1.TicketingMedia
	(*UpdateLocationRequest)(nil),        // 3: ticketing.api.location.v1.UpdateLocationRequest
	(*UpdateLocation)(nil),               // 4: ticketing.api.location.v1.UpdateLocation
	(*DeleteLocationRequest)(nil),        // 5: ticketing.api.location.v1.DeleteLocationRequest
	(*DeleteLocationReply)(nil),          // 6: ticketing.api.location.v1.DeleteLocationReply
	(*GetLocationRequest)(nil),           // 7: ticketing.api.location.v1.GetLocationRequest
	(*LocationFilter)(nil),               // 8: ticketing.api.location.v1.LocationFilter
	(*ListLocationRequest)(nil),          // 9: ticketing.api.location.v1.ListLocationRequest
	(*ListLocationReply)(nil),            // 10: ticketing.api.location.v1.ListLocationReply
	(*Location)(nil),                     // 11: ticketing.api.location.v1.Location
	(*LocationHall)(nil),                 // 12: ticketing.api.location.v1.LocationHall
	(*SeatGroup)(nil),                    // 13: ticketing.api.location.v1.SeatGroup
	(*GetLocationHallsRequest)(nil),      // 14: ticketing.api.location.v1.GetLocationHallsRequest
	(*GetLocationHallsReply)(nil),        // 15: ticketing.api.location.v1.GetLocationHallsReply
	(*GetLocationHallDetailRequest)(nil), // 16: ticketing.api.location.v1.GetLocationHallDetailRequest
	(*GetLocationHallDetailReply)(nil),   // 17: ticketing.api.location.v1.GetLocationHallDetailReply
	(*CreateLocationHallRequest)(nil),    // 18: ticketing.api.location.v1.CreateLocationHallRequest
	(*UpdateLocationHall)(nil),           // 19: ticketing.api.location.v1.UpdateLocationHall
	(*UpdateSeatGroup)(nil),              // 20: ticketing.api.location.v1.UpdateSeatGroup
	(*Seat)(nil),                         // 21: ticketing.api.location.v1.Seat
	(*CreateLocationHallReply)(nil),      // 22: ticketing.api.location.v1.CreateLocationHallReply
	(*UpdateLocationHallRequest)(nil),    // 23: ticketing.api.location.v1.UpdateLocationHallRequest
	(*UpdateLocationHallReply)(nil),      // 24: ticketing.api.location.v1.UpdateLocationHallReply
	(*DeleteLocationHallRequest)(nil),    // 25: ticketing.api.location.v1.DeleteLocationHallRequest
	(*DeleteLocationHallReply)(nil),      // 26: ticketing.api.location.v1.DeleteLocationHallReply
	(*structpb.Struct)(nil),              // 27: google.protobuf.Struct
	(*lbs.Address)(nil),                  // 28: lbs.Address
	(*fieldmaskpb.FieldMask)(nil),        // 29: google.protobuf.FieldMask
	(*query.StringFilterOperation)(nil),  // 30: query.operation.StringFilterOperation
}
var file_ticketing_api_location_v1_location_proto_depIdxs = []int32{
	2,  // 0: ticketing.api.location.v1.CreateLocationRequest.logo:type_name -> ticketing.api.location.v1.TicketingMedia
	2,  // 1: ticketing.api.location.v1.CreateLocationRequest.medias:type_name -> ticketing.api.location.v1.TicketingMedia
	27, // 2: ticketing.api.location.v1.CreateLocationRequest.content:type_name -> google.protobuf.Struct
	28, // 3: ticketing.api.location.v1.CreateLocationRequest.address:type_name -> lbs.Address
	2,  // 4: ticketing.api.location.v1.CreateLocationRequest.legal_docs:type_name -> ticketing.api.location.v1.TicketingMedia
	1,  // 5: ticketing.api.location.v1.CreateLocationRequest.public_contact:type_name -> ticketing.api.location.v1.ContactInfo
	4,  // 6: ticketing.api.location.v1.UpdateLocationRequest.location:type_name -> ticketing.api.location.v1.UpdateLocation
	29, // 7: ticketing.api.location.v1.UpdateLocationRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 8: ticketing.api.location.v1.UpdateLocation.logo:type_name -> ticketing.api.location.v1.TicketingMedia
	2,  // 9: ticketing.api.location.v1.UpdateLocation.medias:type_name -> ticketing.api.location.v1.TicketingMedia
	27, // 10: ticketing.api.location.v1.UpdateLocation.content:type_name -> google.protobuf.Struct
	28, // 11: ticketing.api.location.v1.UpdateLocation.address:type_name -> lbs.Address
	2,  // 12: ticketing.api.location.v1.UpdateLocation.legal_docs:type_name -> ticketing.api.location.v1.TicketingMedia
	1,  // 13: ticketing.api.location.v1.UpdateLocation.public_contact:type_name -> ticketing.api.location.v1.ContactInfo
	30, // 14: ticketing.api.location.v1.LocationFilter.id:type_name -> query.operation.StringFilterOperation
	30, // 15: ticketing.api.location.v1.LocationFilter.name:type_name -> query.operation.StringFilterOperation
	29, // 16: ticketing.api.location.v1.ListLocationRequest.fields:type_name -> google.protobuf.FieldMask
	8,  // 17: ticketing.api.location.v1.ListLocationRequest.filter:type_name -> ticketing.api.location.v1.LocationFilter
	11, // 18: ticketing.api.location.v1.ListLocationReply.items:type_name -> ticketing.api.location.v1.Location
	2,  // 19: ticketing.api.location.v1.Location.logo:type_name -> ticketing.api.location.v1.TicketingMedia
	2,  // 20: ticketing.api.location.v1.Location.medias:type_name -> ticketing.api.location.v1.TicketingMedia
	27, // 21: ticketing.api.location.v1.Location.content:type_name -> google.protobuf.Struct
	28, // 22: ticketing.api.location.v1.Location.address:type_name -> lbs.Address
	2,  // 23: ticketing.api.location.v1.Location.legal_docs:type_name -> ticketing.api.location.v1.TicketingMedia
	1,  // 24: ticketing.api.location.v1.Location.public_contact:type_name -> ticketing.api.location.v1.ContactInfo
	13, // 25: ticketing.api.location.v1.LocationHall.seat_groups:type_name -> ticketing.api.location.v1.SeatGroup
	12, // 26: ticketing.api.location.v1.GetLocationHallsReply.halls:type_name -> ticketing.api.location.v1.LocationHall
	12, // 27: ticketing.api.location.v1.GetLocationHallDetailReply.hall:type_name -> ticketing.api.location.v1.LocationHall
	19, // 28: ticketing.api.location.v1.CreateLocationHallRequest.hall:type_name -> ticketing.api.location.v1.UpdateLocationHall
	20, // 29: ticketing.api.location.v1.UpdateLocationHall.seat_groups:type_name -> ticketing.api.location.v1.UpdateSeatGroup
	21, // 30: ticketing.api.location.v1.UpdateLocationHall.seats:type_name -> ticketing.api.location.v1.Seat
	21, // 31: ticketing.api.location.v1.UpdateSeatGroup.seats:type_name -> ticketing.api.location.v1.Seat
	19, // 32: ticketing.api.location.v1.UpdateLocationHallRequest.hall:type_name -> ticketing.api.location.v1.UpdateLocationHall
	9,  // 33: ticketing.api.location.v1.LocationService.ListLocation:input_type -> ticketing.api.location.v1.ListLocationRequest
	7,  // 34: ticketing.api.location.v1.LocationService.GetLocation:input_type -> ticketing.api.location.v1.GetLocationRequest
	0,  // 35: ticketing.api.location.v1.LocationService.CreateLocation:input_type -> ticketing.api.location.v1.CreateLocationRequest
	3,  // 36: ticketing.api.location.v1.LocationService.UpdateLocation:input_type -> ticketing.api.location.v1.UpdateLocationRequest
	5,  // 37: ticketing.api.location.v1.LocationService.DeleteLocation:input_type -> ticketing.api.location.v1.DeleteLocationRequest
	14, // 38: ticketing.api.location.v1.LocationService.GetLocationHalls:input_type -> ticketing.api.location.v1.GetLocationHallsRequest
	16, // 39: ticketing.api.location.v1.LocationService.GetLocationHallDetail:input_type -> ticketing.api.location.v1.GetLocationHallDetailRequest
	18, // 40: ticketing.api.location.v1.LocationService.CreateLocationHall:input_type -> ticketing.api.location.v1.CreateLocationHallRequest
	23, // 41: ticketing.api.location.v1.LocationService.UpdateLocationHall:input_type -> ticketing.api.location.v1.UpdateLocationHallRequest
	25, // 42: ticketing.api.location.v1.LocationService.DeleteLocationHall:input_type -> ticketing.api.location.v1.DeleteLocationHallRequest
	10, // 43: ticketing.api.location.v1.LocationService.ListLocation:output_type -> ticketing.api.location.v1.ListLocationReply
	11, // 44: ticketing.api.location.v1.LocationService.GetLocation:output_type -> ticketing.api.location.v1.Location
	11, // 45: ticketing.api.location.v1.LocationService.CreateLocation:output_type -> ticketing.api.location.v1.Location
	11, // 46: ticketing.api.location.v1.LocationService.UpdateLocation:output_type -> ticketing.api.location.v1.Location
	6,  // 47: ticketing.api.location.v1.LocationService.DeleteLocation:output_type -> ticketing.api.location.v1.DeleteLocationReply
	15, // 48: ticketing.api.location.v1.LocationService.GetLocationHalls:output_type -> ticketing.api.location.v1.GetLocationHallsReply
	17, // 49: ticketing.api.location.v1.LocationService.GetLocationHallDetail:output_type -> ticketing.api.location.v1.GetLocationHallDetailReply
	22, // 50: ticketing.api.location.v1.LocationService.CreateLocationHall:output_type -> ticketing.api.location.v1.CreateLocationHallReply
	24, // 51: ticketing.api.location.v1.LocationService.UpdateLocationHall:output_type -> ticketing.api.location.v1.UpdateLocationHallReply
	26, // 52: ticketing.api.location.v1.LocationService.DeleteLocationHall:output_type -> ticketing.api.location.v1.DeleteLocationHallReply
	43, // [43:53] is the sub-list for method output_type
	33, // [33:43] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_ticketing_api_location_v1_location_proto_init() }
func file_ticketing_api_location_v1_location_proto_init() {
	if File_ticketing_api_location_v1_location_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticketing_api_location_v1_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketingMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationHall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationHallsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationHallsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationHallDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationHallDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationHallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationHall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSeatGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationHallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationHallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationHallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationHallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_location_v1_location_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationHallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketing_api_location_v1_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketing_api_location_v1_location_proto_goTypes,
		DependencyIndexes: file_ticketing_api_location_v1_location_proto_depIdxs,
		MessageInfos:      file_ticketing_api_location_v1_location_proto_msgTypes,
	}.Build()
	File_ticketing_api_location_v1_location_proto = out.File
	file_ticketing_api_location_v1_location_proto_rawDesc = nil
	file_ticketing_api_location_v1_location_proto_goTypes = nil
	file_ticketing_api_location_v1_location_proto_depIdxs = nil
}
