syntax = "proto3";

package ticketing.api.ticket.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/api/field_behavior.proto";
import "validate/validate.proto";
import "query/operation.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "ticketing/api/location/v1/location.proto";
import "ticketing/api/activity/v1/activity.proto";
import "ticketing/api/show/v1/show.proto";
option go_package = "github.com/go-saas/commerce/ticketing/api/ticket/v1;v1";


service TicketService {
  rpc ListTicket (ListTicketRequest) returns (ListTicketReply){
    option (google.api.http) = {
      get: "/v1/ticketing/ticket",
      additional_bindings:{
        post:"/v1/ticketing/ticket/list",
        body:"*"
      }
    };
  }
  rpc GetTicket (GetTicketRequest) returns (Ticket){
    option (google.api.http) = {
      get: "/v1/ticketing/ticket/{id}"
    };
  }
//  rpc CreateTicket (CreateTicketRequest) returns (Ticket){
//    option (google.api.http) = {
//      post: "/v1/ticketing/ticket",
//      body: "*"
//    };
//  }
//  rpc UpdateTicket (UpdateTicketRequest) returns (Ticket){
//    option (google.api.http) = {
//      put: "/v1/ticketing/ticket/{ticket.id}",
//      body: "*"
//      additional_bindings{
//        patch: "/v1/ticketing/ticket/{ticket.id}",
//        body: "*"
//      }
//    };
//  }
//  rpc DeleteTicket (DeleteTicketRequest) returns (DeleteTicketReply){
//    option (google.api.http) = {
//      delete: "/v1/ticketing/ticket/{id}"
//    };
//  }

}

//message CreateTicketRequest {
//  string name =1 [(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];
//}

//message UpdateTicketRequest {
//  UpdateTicket ticket=1 [(validate.rules).message.required=true,(google.api.field_behavior) = REQUIRED];
//  google.protobuf.FieldMask update_mask = 2;
//}
//
//message UpdateTicket{
//  string id=1 [(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];
//  string name=2;
//}


//message DeleteTicketRequest {
//  string id=1;
//}
//message DeleteTicketReply {
//  string id=1;
//  string name=2;
//}


message GetTicketRequest {
  string id=1 [(validate.rules).string.min_len=1,(google.api.field_behavior)=REQUIRED];
}

message TicketFilter{
  query.operation.StringFilterOperation id=1;
  query.operation.StringFilterOperation location_id =2;
  query.operation.StringFilterOperation hall_id =3;
  query.operation.StringFilterOperation activity_id =4;
  query.operation.StringFilterOperation user_id =5;
}

message ListTicketRequest {
  int32 page_offset =1;
  int32 page_size = 2;
  string search = 3;
  repeated string sort =4;
  google.protobuf.FieldMask fields=5;
  TicketFilter filter =6;

  string after_page_token =10;
  string before_page_token =11;

}

message ListTicketReply {
  int32 total_size =1;
  int32 filter_size =2;
  repeated Ticket items=3;

  optional string next_after_page_token=4;
  optional string next_before_page_token=5;
}

message Ticket{
  string id=1;

  .ticketing.api.location.v1.Location location=2;
  .ticketing.api.location.v1.LocationHall hall=3;
  .ticketing.api.activity.v1.Activity activity=4;

  .ticketing.api.show.v1.Show show=5;

  .ticketing.api.show.v1.ShowSalesType show_sales_type=6;

  google.protobuf.Timestamp created_at =10;

  string status=11;

  string order_id=12;

  string user_id=30;

  string notice=40;
}
