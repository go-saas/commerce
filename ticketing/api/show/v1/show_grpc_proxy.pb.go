// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: ticketing/api/show/v1/show.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ ShowServiceServer = (*showServiceClientProxy)(nil)

const GrpcOperationShowServiceListShow = "/ticketing.api.show.v1.ShowService/ListShow"
const GrpcOperationShowServiceGetShow = "/ticketing.api.show.v1.ShowService/GetShow"
const GrpcOperationShowServiceCreateShow = "/ticketing.api.show.v1.ShowService/CreateShow"
const GrpcOperationShowServiceUpdateShow = "/ticketing.api.show.v1.ShowService/UpdateShow"
const GrpcOperationShowServiceDeleteShow = "/ticketing.api.show.v1.ShowService/DeleteShow"
const GrpcOperationShowServiceRecommendShow = "/ticketing.api.show.v1.ShowService/RecommendShow"

// showServiceClientProxy is the proxy to turn ShowService client to server interface.
type showServiceClientProxy struct {
	cc ShowServiceClient
}

func NewShowServiceClientProxy(cc ShowServiceClient) ShowServiceServer {
	return &showServiceClientProxy{cc}
}

func (c *showServiceClientProxy) ListShow(ctx context.Context, in *ListShowRequest) (*ListShowReply, error) {
	return c.cc.ListShow(ctx, in)
}
func (c *showServiceClientProxy) GetShow(ctx context.Context, in *GetShowRequest) (*Show, error) {
	return c.cc.GetShow(ctx, in)
}
func (c *showServiceClientProxy) CreateShow(ctx context.Context, in *CreateShowRequest) (*Show, error) {
	return c.cc.CreateShow(ctx, in)
}
func (c *showServiceClientProxy) UpdateShow(ctx context.Context, in *UpdateShowRequest) (*Show, error) {
	return c.cc.UpdateShow(ctx, in)
}
func (c *showServiceClientProxy) DeleteShow(ctx context.Context, in *DeleteShowRequest) (*DeleteShowReply, error) {
	return c.cc.DeleteShow(ctx, in)
}
func (c *showServiceClientProxy) RecommendShow(ctx context.Context, in *RecommendShowRequest) (*RecommendShowReply, error) {
	return c.cc.RecommendShow(ctx, in)
}
