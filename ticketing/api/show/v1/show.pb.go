// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ticketing/api/show/v1/show.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	price "github.com/go-saas/commerce/pkg/price"
	v1 "github.com/go-saas/commerce/ticketing/api/activity/v1"
	v11 "github.com/go-saas/commerce/ticketing/api/location/v1"
	query "github.com/go-saas/kit/pkg/query"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteShowRequest) Reset() {
	*x = DeleteShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowRequest) ProtoMessage() {}

func (x *DeleteShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowRequest.ProtoReflect.Descriptor instead.
func (*DeleteShowRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteShowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteShowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteShowReply) Reset() {
	*x = DeleteShowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowReply) ProtoMessage() {}

func (x *DeleteShowReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowReply.ProtoReflect.Descriptor instead.
func (*DeleteShowReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteShowReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetShowRequest) Reset() {
	*x = GetShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowRequest) ProtoMessage() {}

func (x *GetShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowRequest.ProtoReflect.Descriptor instead.
func (*GetShowRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{2}
}

func (x *GetShowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ShowFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *query.StringFilterOperation `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name *query.StringFilterOperation `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ShowFilter) Reset() {
	*x = ShowFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowFilter) ProtoMessage() {}

func (x *ShowFilter) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowFilter.ProtoReflect.Descriptor instead.
func (*ShowFilter) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{3}
}

func (x *ShowFilter) GetId() *query.StringFilterOperation {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ShowFilter) GetName() *query.StringFilterOperation {
	if x != nil {
		return x.Name
	}
	return nil
}

type ListShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageOffset int32                  `protobuf:"varint,1,opt,name=page_offset,json=pageOffset,proto3" json:"page_offset,omitempty"`
	PageSize   int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search     string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Sort       []string               `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
	Fields     *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	Filter     *ShowFilter            `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListShowRequest) Reset() {
	*x = ListShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowRequest) ProtoMessage() {}

func (x *ListShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowRequest.ProtoReflect.Descriptor instead.
func (*ListShowRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{4}
}

func (x *ListShowRequest) GetPageOffset() int32 {
	if x != nil {
		return x.PageOffset
	}
	return 0
}

func (x *ListShowRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListShowRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListShowRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListShowRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListShowRequest) GetFilter() *ShowFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListShowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSize  int32   `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FilterSize int32   `protobuf:"varint,2,opt,name=filter_size,json=filterSize,proto3" json:"filter_size,omitempty"`
	Items      []*Show `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListShowReply) Reset() {
	*x = ListShowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowReply) ProtoMessage() {}

func (x *ListShowReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowReply.ProtoReflect.Descriptor instead.
func (*ListShowReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{5}
}

func (x *ListShowReply) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListShowReply) GetFilterSize() int32 {
	if x != nil {
		return x.FilterSize
	}
	return 0
}

func (x *ListShowReply) GetItems() []*Show {
	if x != nil {
		return x.Items
	}
	return nil
}

type Show struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ActivityId string                 `protobuf:"bytes,10,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Activity   *v1.Activity           `protobuf:"bytes,11,opt,name=activity,proto3" json:"activity,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LocationId string                 `protobuf:"bytes,20,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Location   *v11.Location          `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
	HallId     string                 `protobuf:"bytes,31,opt,name=hall_id,json=hallId,proto3" json:"hall_id,omitempty"`
	Hall       *v11.LocationHall      `protobuf:"bytes,32,opt,name=hall,proto3" json:"hall,omitempty"`
	SalesTypes []*ShowSalesType       `protobuf:"bytes,40,rep,name=sales_types,json=salesTypes,proto3" json:"sales_types,omitempty"`
	Notice     string                 `protobuf:"bytes,50,opt,name=notice,proto3" json:"notice,omitempty"`
	SalesCount int32                  `protobuf:"varint,100,opt,name=sales_count,json=salesCount,proto3" json:"sales_count,omitempty"`
	RestCount  int32                  `protobuf:"varint,101,opt,name=rest_count,json=restCount,proto3" json:"rest_count,omitempty"`
}

func (x *Show) Reset() {
	*x = Show{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Show) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Show) ProtoMessage() {}

func (x *Show) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Show.ProtoReflect.Descriptor instead.
func (*Show) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{6}
}

func (x *Show) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Show) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Show) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *Show) GetActivity() *v1.Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *Show) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Show) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Show) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Show) GetLocation() *v11.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Show) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

func (x *Show) GetHall() *v11.LocationHall {
	if x != nil {
		return x.Hall
	}
	return nil
}

func (x *Show) GetSalesTypes() []*ShowSalesType {
	if x != nil {
		return x.SalesTypes
	}
	return nil
}

func (x *Show) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *Show) GetSalesCount() int32 {
	if x != nil {
		return x.SalesCount
	}
	return 0
}

func (x *Show) GetRestCount() int32 {
	if x != nil {
		return x.RestCount
	}
	return 0
}

type ShowSalesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SeatGroup    *v11.SeatGroup         `protobuf:"bytes,3,opt,name=seat_group,json=seatGroup,proto3" json:"seat_group,omitempty"`
	SeatGroupId  *string                `protobuf:"bytes,4,opt,name=seat_group_id,json=seatGroupId,proto3,oneof" json:"seat_group_id,omitempty"`
	SaleableFrom *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=saleable_from,json=saleableFrom,proto3" json:"saleable_from,omitempty"`
	SaleableTo   *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=saleable_to,json=saleableTo,proto3" json:"saleable_to,omitempty"`
	Price        *price.InfoPb          `protobuf:"bytes,102,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *ShowSalesType) Reset() {
	*x = ShowSalesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowSalesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowSalesType) ProtoMessage() {}

func (x *ShowSalesType) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowSalesType.ProtoReflect.Descriptor instead.
func (*ShowSalesType) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{7}
}

func (x *ShowSalesType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShowSalesType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShowSalesType) GetSeatGroup() *v11.SeatGroup {
	if x != nil {
		return x.SeatGroup
	}
	return nil
}

func (x *ShowSalesType) GetSeatGroupId() string {
	if x != nil && x.SeatGroupId != nil {
		return *x.SeatGroupId
	}
	return ""
}

func (x *ShowSalesType) GetSaleableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableFrom
	}
	return nil
}

func (x *ShowSalesType) GetSaleableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableTo
	}
	return nil
}

func (x *ShowSalesType) GetPrice() *price.InfoPb {
	if x != nil {
		return x.Price
	}
	return nil
}

type UpdateShowSalesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SeatGroupId  string                 `protobuf:"bytes,4,opt,name=seat_group_id,json=seatGroupId,proto3" json:"seat_group_id,omitempty"`
	SaleableFrom *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=saleable_from,json=saleableFrom,proto3" json:"saleable_from,omitempty"`
	SaleableTo   *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=saleable_to,json=saleableTo,proto3" json:"saleable_to,omitempty"`
	Price        *price.InfoPb          `protobuf:"bytes,102,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *UpdateShowSalesType) Reset() {
	*x = UpdateShowSalesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShowSalesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShowSalesType) ProtoMessage() {}

func (x *UpdateShowSalesType) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShowSalesType.ProtoReflect.Descriptor instead.
func (*UpdateShowSalesType) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateShowSalesType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateShowSalesType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateShowSalesType) GetSeatGroupId() string {
	if x != nil {
		return x.SeatGroupId
	}
	return ""
}

func (x *UpdateShowSalesType) GetSaleableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableFrom
	}
	return nil
}

func (x *UpdateShowSalesType) GetSaleableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableTo
	}
	return nil
}

func (x *UpdateShowSalesType) GetPrice() *price.InfoPb {
	if x != nil {
		return x.Price
	}
	return nil
}

type CreateShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string                 `protobuf:"bytes,10,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LocationId string                 `protobuf:"bytes,20,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	HallId     string                 `protobuf:"bytes,30,opt,name=hall_id,json=hallId,proto3" json:"hall_id,omitempty"`
	SalesTypes []*UpdateShowSalesType `protobuf:"bytes,40,rep,name=sales_types,json=salesTypes,proto3" json:"sales_types,omitempty"`
	Notice     string                 `protobuf:"bytes,50,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *CreateShowRequest) Reset() {
	*x = CreateShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShowRequest) ProtoMessage() {}

func (x *CreateShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShowRequest.ProtoReflect.Descriptor instead.
func (*CreateShowRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{9}
}

func (x *CreateShowRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *CreateShowRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateShowRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateShowRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CreateShowRequest) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

func (x *CreateShowRequest) GetSalesTypes() []*UpdateShowSalesType {
	if x != nil {
		return x.SalesTypes
	}
	return nil
}

func (x *CreateShowRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type UpdateShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show       *UpdateShow            `protobuf:"bytes,1,opt,name=show,proto3" json:"show,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateShowRequest) Reset() {
	*x = UpdateShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShowRequest) ProtoMessage() {}

func (x *UpdateShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShowRequest.ProtoReflect.Descriptor instead.
func (*UpdateShowRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateShowRequest) GetShow() *UpdateShow {
	if x != nil {
		return x.Show
	}
	return nil
}

func (x *UpdateShowRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	SalesTypes []*UpdateShowSalesType `protobuf:"bytes,40,rep,name=sales_types,json=salesTypes,proto3" json:"sales_types,omitempty"`
	Notice     string                 `protobuf:"bytes,50,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *UpdateShow) Reset() {
	*x = UpdateShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShow) ProtoMessage() {}

func (x *UpdateShow) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShow.ProtoReflect.Descriptor instead.
func (*UpdateShow) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateShow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateShow) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateShow) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateShow) GetSalesTypes() []*UpdateShowSalesType {
	if x != nil {
		return x.SalesTypes
	}
	return nil
}

func (x *UpdateShow) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

var File_ticketing_api_show_v1_show_proto protoreflect.FileDescriptor

var file_ticketing_api_show_v1_show_proto_rawDesc = []byte{
	0x0a, 0x20, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x68, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xea, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x32,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x82, 0x01,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xfc, 0x04, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x04, 0x68, 0x61, 0x6c, 0x6c, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x68, 0x61,
	0x6c, 0x6c, 0x12, 0x45, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xda, 0x02, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x12, 0x27, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x62, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x84,
	0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x3b, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x12, 0x27, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x62, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x88, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0xe2, 0x41, 0x01, 0x02, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x0c, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x68, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x22, 0x95, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x0c, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x9c, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0xe2, 0x41, 0x01,
	0x02, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x32, 0xa9, 0x05, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x5a, 0x1c, 0x3a, 0x01, 0x2a, 0x22,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73,
	0x68, 0x6f, 0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x6e, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x25, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x28, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77,
	0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x3a, 0x01,
	0x2a, 0x5a, 0x21, 0x3a, 0x01, 0x2a, 0x32, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x77,
	0x2e, 0x69, 0x64, 0x7d, 0x1a, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x69,
	0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x12, 0x28, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72,
	0x63, 0x65, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ticketing_api_show_v1_show_proto_rawDescOnce sync.Once
	file_ticketing_api_show_v1_show_proto_rawDescData = file_ticketing_api_show_v1_show_proto_rawDesc
)

func file_ticketing_api_show_v1_show_proto_rawDescGZIP() []byte {
	file_ticketing_api_show_v1_show_proto_rawDescOnce.Do(func() {
		file_ticketing_api_show_v1_show_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketing_api_show_v1_show_proto_rawDescData)
	})
	return file_ticketing_api_show_v1_show_proto_rawDescData
}

var file_ticketing_api_show_v1_show_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ticketing_api_show_v1_show_proto_goTypes = []interface{}{
	(*DeleteShowRequest)(nil),           // 0: ticketing.api.show.v1.DeleteShowRequest
	(*DeleteShowReply)(nil),             // 1: ticketing.api.show.v1.DeleteShowReply
	(*GetShowRequest)(nil),              // 2: ticketing.api.show.v1.GetShowRequest
	(*ShowFilter)(nil),                  // 3: ticketing.api.show.v1.ShowFilter
	(*ListShowRequest)(nil),             // 4: ticketing.api.show.v1.ListShowRequest
	(*ListShowReply)(nil),               // 5: ticketing.api.show.v1.ListShowReply
	(*Show)(nil),                        // 6: ticketing.api.show.v1.Show
	(*ShowSalesType)(nil),               // 7: ticketing.api.show.v1.ShowSalesType
	(*UpdateShowSalesType)(nil),         // 8: ticketing.api.show.v1.UpdateShowSalesType
	(*CreateShowRequest)(nil),           // 9: ticketing.api.show.v1.CreateShowRequest
	(*UpdateShowRequest)(nil),           // 10: ticketing.api.show.v1.UpdateShowRequest
	(*UpdateShow)(nil),                  // 11: ticketing.api.show.v1.UpdateShow
	(*query.StringFilterOperation)(nil), // 12: query.operation.StringFilterOperation
	(*fieldmaskpb.FieldMask)(nil),       // 13: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),       // 14: google.protobuf.Timestamp
	(*v1.Activity)(nil),                 // 15: ticketing.api.activity.v1.Activity
	(*v11.Location)(nil),                // 16: ticketing.api.location.v1.Location
	(*v11.LocationHall)(nil),            // 17: ticketing.api.location.v1.LocationHall
	(*v11.SeatGroup)(nil),               // 18: ticketing.api.location.v1.SeatGroup
	(*price.InfoPb)(nil),                // 19: pkg.price.InfoPb
}
var file_ticketing_api_show_v1_show_proto_depIdxs = []int32{
	12, // 0: ticketing.api.show.v1.ShowFilter.id:type_name -> query.operation.StringFilterOperation
	12, // 1: ticketing.api.show.v1.ShowFilter.name:type_name -> query.operation.StringFilterOperation
	13, // 2: ticketing.api.show.v1.ListShowRequest.fields:type_name -> google.protobuf.FieldMask
	3,  // 3: ticketing.api.show.v1.ListShowRequest.filter:type_name -> ticketing.api.show.v1.ShowFilter
	6,  // 4: ticketing.api.show.v1.ListShowReply.items:type_name -> ticketing.api.show.v1.Show
	14, // 5: ticketing.api.show.v1.Show.created_at:type_name -> google.protobuf.Timestamp
	15, // 6: ticketing.api.show.v1.Show.activity:type_name -> ticketing.api.activity.v1.Activity
	14, // 7: ticketing.api.show.v1.Show.start_time:type_name -> google.protobuf.Timestamp
	14, // 8: ticketing.api.show.v1.Show.end_time:type_name -> google.protobuf.Timestamp
	16, // 9: ticketing.api.show.v1.Show.location:type_name -> ticketing.api.location.v1.Location
	17, // 10: ticketing.api.show.v1.Show.hall:type_name -> ticketing.api.location.v1.LocationHall
	7,  // 11: ticketing.api.show.v1.Show.sales_types:type_name -> ticketing.api.show.v1.ShowSalesType
	18, // 12: ticketing.api.show.v1.ShowSalesType.seat_group:type_name -> ticketing.api.location.v1.SeatGroup
	14, // 13: ticketing.api.show.v1.ShowSalesType.saleable_from:type_name -> google.protobuf.Timestamp
	14, // 14: ticketing.api.show.v1.ShowSalesType.saleable_to:type_name -> google.protobuf.Timestamp
	19, // 15: ticketing.api.show.v1.ShowSalesType.Price:type_name -> pkg.price.InfoPb
	14, // 16: ticketing.api.show.v1.UpdateShowSalesType.saleable_from:type_name -> google.protobuf.Timestamp
	14, // 17: ticketing.api.show.v1.UpdateShowSalesType.saleable_to:type_name -> google.protobuf.Timestamp
	19, // 18: ticketing.api.show.v1.UpdateShowSalesType.Price:type_name -> pkg.price.InfoPb
	14, // 19: ticketing.api.show.v1.CreateShowRequest.start_time:type_name -> google.protobuf.Timestamp
	14, // 20: ticketing.api.show.v1.CreateShowRequest.end_time:type_name -> google.protobuf.Timestamp
	8,  // 21: ticketing.api.show.v1.CreateShowRequest.sales_types:type_name -> ticketing.api.show.v1.UpdateShowSalesType
	11, // 22: ticketing.api.show.v1.UpdateShowRequest.show:type_name -> ticketing.api.show.v1.UpdateShow
	13, // 23: ticketing.api.show.v1.UpdateShowRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 24: ticketing.api.show.v1.UpdateShow.start_time:type_name -> google.protobuf.Timestamp
	14, // 25: ticketing.api.show.v1.UpdateShow.end_time:type_name -> google.protobuf.Timestamp
	8,  // 26: ticketing.api.show.v1.UpdateShow.sales_types:type_name -> ticketing.api.show.v1.UpdateShowSalesType
	4,  // 27: ticketing.api.show.v1.ShowService.ListShow:input_type -> ticketing.api.show.v1.ListShowRequest
	2,  // 28: ticketing.api.show.v1.ShowService.GetShow:input_type -> ticketing.api.show.v1.GetShowRequest
	9,  // 29: ticketing.api.show.v1.ShowService.CreateShow:input_type -> ticketing.api.show.v1.CreateShowRequest
	10, // 30: ticketing.api.show.v1.ShowService.UpdateShow:input_type -> ticketing.api.show.v1.UpdateShowRequest
	0,  // 31: ticketing.api.show.v1.ShowService.DeleteShow:input_type -> ticketing.api.show.v1.DeleteShowRequest
	5,  // 32: ticketing.api.show.v1.ShowService.ListShow:output_type -> ticketing.api.show.v1.ListShowReply
	6,  // 33: ticketing.api.show.v1.ShowService.GetShow:output_type -> ticketing.api.show.v1.Show
	6,  // 34: ticketing.api.show.v1.ShowService.CreateShow:output_type -> ticketing.api.show.v1.Show
	6,  // 35: ticketing.api.show.v1.ShowService.UpdateShow:output_type -> ticketing.api.show.v1.Show
	1,  // 36: ticketing.api.show.v1.ShowService.DeleteShow:output_type -> ticketing.api.show.v1.DeleteShowReply
	32, // [32:37] is the sub-list for method output_type
	27, // [27:32] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_ticketing_api_show_v1_show_proto_init() }
func file_ticketing_api_show_v1_show_proto_init() {
	if File_ticketing_api_show_v1_show_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticketing_api_show_v1_show_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Show); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowSalesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShowSalesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ticketing_api_show_v1_show_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketing_api_show_v1_show_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketing_api_show_v1_show_proto_goTypes,
		DependencyIndexes: file_ticketing_api_show_v1_show_proto_depIdxs,
		MessageInfos:      file_ticketing_api_show_v1_show_proto_msgTypes,
	}.Build()
	File_ticketing_api_show_v1_show_proto = out.File
	file_ticketing_api_show_v1_show_proto_rawDesc = nil
	file_ticketing_api_show_v1_show_proto_goTypes = nil
	file_ticketing_api_show_v1_show_proto_depIdxs = nil
}
