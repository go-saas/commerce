// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: ticketing/api/show/v1/show_app.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-saas/commerce/ticketing/api/activity/v1"
	_ "github.com/go-saas/commerce/ticketing/api/location/v1"
	_ "github.com/go-saas/kit/pkg/price"
	_ "github.com/go-saas/kit/pkg/query"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaceShowOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowId    string            `protobuf:"bytes,1,opt,name=show_id,json=showId,proto3" json:"show_id,omitempty"`
	SalesType []*OrderSalesType `protobuf:"bytes,2,rep,name=sales_type,json=salesType,proto3" json:"sales_type,omitempty"`
}

func (x *PlaceShowOrderRequest) Reset() {
	*x = PlaceShowOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceShowOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceShowOrderRequest) ProtoMessage() {}

func (x *PlaceShowOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceShowOrderRequest.ProtoReflect.Descriptor instead.
func (*PlaceShowOrderRequest) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_app_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceShowOrderRequest) GetShowId() string {
	if x != nil {
		return x.ShowId
	}
	return ""
}

func (x *PlaceShowOrderRequest) GetSalesType() []*OrderSalesType {
	if x != nil {
		return x.SalesType
	}
	return nil
}

type OrderSalesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowSalesTypeId string  `protobuf:"bytes,1,opt,name=show_sales_type_id,json=showSalesTypeId,proto3" json:"show_sales_type_id,omitempty"`
	ShowSeatId      *string `protobuf:"bytes,2,opt,name=show_seat_id,json=showSeatId,proto3,oneof" json:"show_seat_id,omitempty"`
	Qty             int32   `protobuf:"varint,3,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *OrderSalesType) Reset() {
	*x = OrderSalesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSalesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSalesType) ProtoMessage() {}

func (x *OrderSalesType) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSalesType.ProtoReflect.Descriptor instead.
func (*OrderSalesType) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_app_proto_rawDescGZIP(), []int{1}
}

func (x *OrderSalesType) GetShowSalesTypeId() string {
	if x != nil {
		return x.ShowSalesTypeId
	}
	return ""
}

func (x *OrderSalesType) GetShowSeatId() string {
	if x != nil && x.ShowSeatId != nil {
		return *x.ShowSeatId
	}
	return ""
}

func (x *OrderSalesType) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type PlaceShowOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *PlaceShowOrderReply) Reset() {
	*x = PlaceShowOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceShowOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceShowOrderReply) ProtoMessage() {}

func (x *PlaceShowOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_ticketing_api_show_v1_show_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceShowOrderReply.ProtoReflect.Descriptor instead.
func (*PlaceShowOrderReply) Descriptor() ([]byte, []int) {
	return file_ticketing_api_show_v1_show_app_proto_rawDescGZIP(), []int{2}
}

func (x *PlaceShowOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

var File_ticketing_api_show_v1_show_app_proto protoreflect.FileDescriptor

var file_ticketing_api_show_v1_show_app_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x68, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x12, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x03, 0x71, 0x74, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x13,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x32, 0x95,
	0x04, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xba, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x5d, 0x92, 0x41, 0x1a, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x0a, 0x08, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3a, 0x5a, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x68, 0x6f,
	0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x92,
	0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x25, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x22, 0x40, 0x92, 0x41, 0x1a, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x0a, 0x08, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x44, 0x92, 0x41, 0x1a, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x0a, 0x08, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x68, 0x6f, 0x77,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x72, 0x63, 0x65, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticketing_api_show_v1_show_app_proto_rawDescOnce sync.Once
	file_ticketing_api_show_v1_show_app_proto_rawDescData = file_ticketing_api_show_v1_show_app_proto_rawDesc
)

func file_ticketing_api_show_v1_show_app_proto_rawDescGZIP() []byte {
	file_ticketing_api_show_v1_show_app_proto_rawDescOnce.Do(func() {
		file_ticketing_api_show_v1_show_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketing_api_show_v1_show_app_proto_rawDescData)
	})
	return file_ticketing_api_show_v1_show_app_proto_rawDescData
}

var file_ticketing_api_show_v1_show_app_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ticketing_api_show_v1_show_app_proto_goTypes = []interface{}{
	(*PlaceShowOrderRequest)(nil), // 0: ticketing.api.show.v1.PlaceShowOrderRequest
	(*OrderSalesType)(nil),        // 1: ticketing.api.show.v1.OrderSalesType
	(*PlaceShowOrderReply)(nil),   // 2: ticketing.api.show.v1.PlaceShowOrderReply
	(*ListShowRequest)(nil),       // 3: ticketing.api.show.v1.ListShowRequest
	(*GetShowRequest)(nil),        // 4: ticketing.api.show.v1.GetShowRequest
	(*ListShowReply)(nil),         // 5: ticketing.api.show.v1.ListShowReply
	(*Show)(nil),                  // 6: ticketing.api.show.v1.Show
}
var file_ticketing_api_show_v1_show_app_proto_depIdxs = []int32{
	1, // 0: ticketing.api.show.v1.PlaceShowOrderRequest.sales_type:type_name -> ticketing.api.show.v1.OrderSalesType
	3, // 1: ticketing.api.show.v1.ShowAppService.ListAppShow:input_type -> ticketing.api.show.v1.ListShowRequest
	4, // 2: ticketing.api.show.v1.ShowAppService.GetAppShow:input_type -> ticketing.api.show.v1.GetShowRequest
	0, // 3: ticketing.api.show.v1.ShowAppService.PlaceShowOrder:input_type -> ticketing.api.show.v1.PlaceShowOrderRequest
	5, // 4: ticketing.api.show.v1.ShowAppService.ListAppShow:output_type -> ticketing.api.show.v1.ListShowReply
	6, // 5: ticketing.api.show.v1.ShowAppService.GetAppShow:output_type -> ticketing.api.show.v1.Show
	2, // 6: ticketing.api.show.v1.ShowAppService.PlaceShowOrder:output_type -> ticketing.api.show.v1.PlaceShowOrderReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ticketing_api_show_v1_show_app_proto_init() }
func file_ticketing_api_show_v1_show_app_proto_init() {
	if File_ticketing_api_show_v1_show_app_proto != nil {
		return
	}
	file_ticketing_api_show_v1_show_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ticketing_api_show_v1_show_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceShowOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSalesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketing_api_show_v1_show_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceShowOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ticketing_api_show_v1_show_app_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketing_api_show_v1_show_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketing_api_show_v1_show_app_proto_goTypes,
		DependencyIndexes: file_ticketing_api_show_v1_show_app_proto_depIdxs,
		MessageInfos:      file_ticketing_api_show_v1_show_app_proto_msgTypes,
	}.Build()
	File_ticketing_api_show_v1_show_app_proto = out.File
	file_ticketing_api_show_v1_show_app_proto_rawDesc = nil
	file_ticketing_api_show_v1_show_app_proto_goTypes = nil
	file_ticketing_api_show_v1_show_app_proto_depIdxs = nil
}
