// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: ticketing/api/banner/v1/banner.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ TicketingBannerServiceServer = (*ticketingBannerServiceClientProxy)(nil)

const GrpcOperationTicketingBannerServiceListBanner = "/ticketing.api.banner.v1.TicketingBannerService/ListBanner"
const GrpcOperationTicketingBannerServiceCreateBanner = "/ticketing.api.banner.v1.TicketingBannerService/CreateBanner"
const GrpcOperationTicketingBannerServiceUpdateBanner = "/ticketing.api.banner.v1.TicketingBannerService/UpdateBanner"
const GrpcOperationTicketingBannerServiceDeleteBanner = "/ticketing.api.banner.v1.TicketingBannerService/DeleteBanner"

var _ TicketingAppBannerServiceServer = (*ticketingAppBannerServiceClientProxy)(nil)

const GrpcOperationTicketingAppBannerServiceListAppBanner = "/ticketing.api.banner.v1.TicketingAppBannerService/ListAppBanner"

// ticketingBannerServiceClientProxy is the proxy to turn TicketingBannerService client to server interface.
type ticketingBannerServiceClientProxy struct {
	cc TicketingBannerServiceClient
}

func NewTicketingBannerServiceClientProxy(cc TicketingBannerServiceClient) TicketingBannerServiceServer {
	return &ticketingBannerServiceClientProxy{cc}
}

func (c *ticketingBannerServiceClientProxy) ListBanner(ctx context.Context, in *ListBannerRequest) (*ListBannerReply, error) {
	return c.cc.ListBanner(ctx, in)
}
func (c *ticketingBannerServiceClientProxy) CreateBanner(ctx context.Context, in *CreateBannerRequest) (*Banner, error) {
	return c.cc.CreateBanner(ctx, in)
}
func (c *ticketingBannerServiceClientProxy) UpdateBanner(ctx context.Context, in *UpdateBannerRequest) (*Banner, error) {
	return c.cc.UpdateBanner(ctx, in)
}
func (c *ticketingBannerServiceClientProxy) DeleteBanner(ctx context.Context, in *DeleteBannerRequest) (*DeleteBannerReply, error) {
	return c.cc.DeleteBanner(ctx, in)
}

// ticketingAppBannerServiceClientProxy is the proxy to turn TicketingAppBannerService client to server interface.
type ticketingAppBannerServiceClientProxy struct {
	cc TicketingAppBannerServiceClient
}

func NewTicketingAppBannerServiceClientProxy(cc TicketingAppBannerServiceClient) TicketingAppBannerServiceServer {
	return &ticketingAppBannerServiceClientProxy{cc}
}

func (c *ticketingAppBannerServiceClientProxy) ListAppBanner(ctx context.Context, in *ListAppBannerRequest) (*ListAppBannerReply, error) {
	return c.cc.ListAppBanner(ctx, in)
}
