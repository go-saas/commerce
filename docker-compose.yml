version: '3.7'
services:

  web:
    image: ${DOCKER_REGISTRY}go-saas-kit-frontend:${DOCKER_TAG:-latest}
    restart: unless-stopped

  commerce-web:
    image: ${DOCKER_REGISTRY}go-saas-commerce-web:${DOCKER_TAG:-latest}
    restart: unless-stopped

  commerce_app:
    image: ${DOCKER_REGISTRY}commerce_app
    restart: unless-stopped
    ports:
      - "8710:80"

  api_docs:
    image: ${DOCKER_REGISTRY}go-saas-commerce-swagger:${DOCKER_TAG:-latest}
    environment:
      - BASE_URL="/swagger"
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./openapi/Dockerfile

  apisix:
    image: ${DOCKER_REGISTRY}go-saas-kit-apisix:${DOCKER_TAG:-latest}
    ports:
      - "8080:9080" #Http
      - "8443:8443" #Https
    restart: unless-stopped


  apisix-dashboard:
    image: apache/apisix-dashboard:2.15.0-alpine
    restart: always
    volumes:
      - ./quickstart/configs/apisix/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - "9100:9000"


  hydra:
    image: oryd/hydra:v2.0.3

    command:
      serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - ./quickstart/configs/hydra:/etc/config/hydra

    environment:
      - DSN=mysql://root:youShouldChangeThis@tcp(mysqld:3306)/kit?max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate

  hydra-migrate:
    image: oryd/hydra:v2.0.3
    environment:
      - DSN=mysql://root:youShouldChangeThis@tcp(mysqld:3306)/kit?max_conns=20&max_idle_conns=4
    command:
      migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./quickstart/configs/hydra:/etc/config/hydra
    restart: on-failure
    depends_on:
      - mysqld

  mysqld:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=youShouldChangeThis
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:6.0
    restart: always
    command: redis-server --requirepass youShouldChangeThis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  etcd:
    image: bitnami/etcd:3.5.0
    restart: always
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - etcd_data:/bitnami/etcd

  dtm:
    image: yedf/dtm:1.17.3
    restart: unless-stopped
    command: ["-c", "/data/conf.yml"]
    volumes:
      - ./quickstart/configs/dtm/conf.yml:/data/conf.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mysql_data:
  etcd_data: