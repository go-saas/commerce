// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: product/api/product/v1/brand.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ BrandServiceServer = (*brandServiceClientProxy)(nil)

const GrpcOperationBrandServiceListBrand = "/product.api.product.v1.BrandService/ListBrand"
const GrpcOperationBrandServiceGetBrand = "/product.api.product.v1.BrandService/GetBrand"
const GrpcOperationBrandServiceCreateBrand = "/product.api.product.v1.BrandService/CreateBrand"
const GrpcOperationBrandServiceUpdateBrand = "/product.api.product.v1.BrandService/UpdateBrand"
const GrpcOperationBrandServiceDeleteBrand = "/product.api.product.v1.BrandService/DeleteBrand"

// brandServiceClientProxy is the proxy to turn BrandService client to server interface.
type brandServiceClientProxy struct {
	cc BrandServiceClient
}

func NewBrandServiceClientProxy(cc BrandServiceClient) BrandServiceServer {
	return &brandServiceClientProxy{cc}
}

func (c *brandServiceClientProxy) ListBrand(ctx context.Context, in *ListBrandRequest) (*ListBrandReply, error) {
	return c.cc.ListBrand(ctx, in)
}
func (c *brandServiceClientProxy) GetBrand(ctx context.Context, in *GetBrandRequest) (*Brand, error) {
	return c.cc.GetBrand(ctx, in)
}
func (c *brandServiceClientProxy) CreateBrand(ctx context.Context, in *CreateBrandRequest) (*Brand, error) {
	return c.cc.CreateBrand(ctx, in)
}
func (c *brandServiceClientProxy) UpdateBrand(ctx context.Context, in *UpdateBrandRequest) (*Brand, error) {
	return c.cc.UpdateBrand(ctx, in)
}
func (c *brandServiceClientProxy) DeleteBrand(ctx context.Context, in *DeleteBrandRequest) (*DeleteBrandReply, error) {
	return c.cc.DeleteBrand(ctx, in)
}
